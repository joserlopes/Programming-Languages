let map = fn f: int->int => int
        { fn l: list<int> => list<int>
        { match l {
                | nil -> nil
                | v :: tail -> cons(f(v), map(f)(tail))
        }
}};
let myList = cons(1, cons(2, cons(3, cons(4, cons(5, nil)))));
map (fn x: int => { x * 2 })(myList);;
